<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>oom on Clarity</title>
    <link>https://www.blentle.com/tags/oom/</link>
    <description>Recent content in oom on Clarity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2016–2026, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Mon, 04 Nov 2019 22:10:14 +0800</lastBuildDate><atom:link href="https://www.blentle.com/tags/oom/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux Oom Killer机制</title>
      <link>https://www.blentle.com/post/linux-oom-killer/</link>
      <pubDate>Mon, 04 Nov 2019 22:10:14 +0800</pubDate>
      
      <guid>https://www.blentle.com/post/linux-oom-killer/</guid>
      <description>
        
          
            linux oom killer机制 简介 The OOM Killer 是内核中的一个进程，当系统出现严重内存不足时，它就会启用自己的算法去选择某一个进程并杀掉. 之所以会发生这种情况，是因为Linux内核在给某个进程分配内存时，会比进程申请的内存多分配一些. 这是为了保证进程在真正使用的时候有足够的内存，因为进程在申请内存后并不一定立即使用，当真正使用的时候，可能部分内存已经被回收了. 比如 当一个进程申请2G内存时，内核可能会分配2.5G的内存给它.通常这不会导致什么问题.然而一旦系统内大量的进程在使用内存时，就会出现内存供不应求.很快就会导致内存耗尽. 这时就会触发这个oom killer,它会选择性的杀掉某个进程以保证系统能够正常运行.
The OOM Killer选择哪个进程杀掉? The OOM Killer通过检查所有正在运行的进程，然后根据自己的算法给每个进程一个badness分数.拥有最高 badness分数的进程将会在内存不足时被杀掉.它打分的算法如下:
 某一个进程和它所有的子进程都占用了很多内存的将会打一个高分; 优先选择进程号最小的那个进程 内核进程和其他较重要的进程会被打成相对较低的分.  The OOM Killer给每一个进程打的分数都放在 /proc/{pid}/oom_score文件中，其实这里有三个文件，依次是
oom_score、oom_adj、oom_score_adj. 这三个文件按Linux官方文档来说就是：
oom_score是存储最终的分数，也就是badneess分数，最高的会被kill掉, man 一下 proc，找到:
1 /proc/[pid]/oom_score (since Linux 2.6.11) 2 This file displays the current score that the kernel gives to this process for the 3 purpose of selecting a process for the OOM-killer. A higher score means that the 4 process is more likely to be selected by the OOM-killer.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
