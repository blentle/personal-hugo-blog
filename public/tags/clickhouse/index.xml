<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>clickhouse on Clarity</title>
    <link>https://www.blentle.com/tags/clickhouse/</link>
    <description>Recent content in clickhouse on Clarity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2016–2026, Steve Francia and the Hugo Authors; all rights reserved.</copyright><atom:link href="https://www.blentle.com/tags/clickhouse/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ClickHouse源码安装踩坑笔记</title>
      <link>https://www.blentle.com/post/clickhouse-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.blentle.com/post/clickhouse-install/</guid>
      <description>
        
          &lt;h3 id=&#34;前情概要&#34;&gt;前情概要&lt;/h3&gt;
&lt;p&gt;由于工作需要用到clickhouse, 这里暂不介绍概念，应用场景，谷歌，百度一大把. 将安装过程踩下的坑记录下来备用&lt;/p&gt;
&lt;h3 id=&#34;clickhouse源码-git-clone安装直接下载源码包安装失败&#34;&gt;ClickHouse源码 git clone安装（直接下载源码包安装失败）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;源码安装一定要用git克隆下来，不要下载github上已经打好的包，因为有些依赖的子模块时时刻刻在更新.要不然编译各种报错.   一定要克隆，一定要克隆，一定要克隆&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;github上找到一个最新的稳定版本，一般以 -stable结尾的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个clickhouse目录如 mkdir /data/clickhouse-19.7.3.9-stable,这里我带上版本号，方便以后好升级&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clone&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cd /data/clickhouse-19.7.3.9-stable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git clone -b &#39;v19.7.3.9-stable&#39; --recursive &lt;a href=&#34;https://github.com/yandex/ClickHouse.git&#34;&gt;https://github.com/yandex/ClickHouse.git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里递归下载依赖可能需要一点时间， 200kb/s的速度，我这里用了将近半个小时&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;升级子模块&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;cd /data/clickhouse-19.7.3.9-stable/ClickHouse&lt;/p&gt;
&lt;p&gt;git submodule update --init --recursive&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;创建编译目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;cd /data/clickhouse-19.7.3.9-stable/ClickHouse&lt;/p&gt;
&lt;p&gt;mkdir build&lt;/p&gt;
&lt;p&gt;cd build&lt;/p&gt;
&lt;p&gt;cmake3 ..     （这一步生成可执行编译的makefile文件,如果系统没有cmake3 执行: sudo yum -y install cmake3 ）&lt;/p&gt;
&lt;p&gt;这一步会报缺少很多依赖错误，报什么依赖错误，安装什么依赖即可,如果嫌麻烦，可以一次性安装所有依赖,按官方文档来：&lt;a href=&#34;https://clickhouse.yandex/docs/en/development/build/&#34;&gt;https://clickhouse.yandex/docs/en/development/build/&lt;/a&gt;，注意把debian系列的 apt-get命令换成 yum&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;##安裝gcc,g++ 7以上的版本,clickhouse 用了很多 C++ 11的新特性&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo yum -y install devtoolset-7-gcc
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;sudo yum -y install devtoolset-7-gcc-c++
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; /opt/rh/devtoolset-7/enable
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#安装完确认一下版本号&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;gcc --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.blentle.com/images/clickhouse/clickhouse-dep-01.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#安装jemalloc （clickhouse 没有用glibc的内存分配器）&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo yum -y install jemalloc-devel
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#安装openssl&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;sudo yum -y install openssl-devel
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#安装epel&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;sudo yum -y install epel-release
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我这里可能系统自带了很多已经装好的软件，如果在cmake3后还是报很多依赖缺失，按报错一次安装依赖即可.&lt;/p&gt;
&lt;p&gt;装完依赖后要再次回去清掉build里产生的缓存，可以直接删除 ,删除完重新执行cmake3指向clickhouse根目录.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; build
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;rm -rf *
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;cmake3 ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这步最后会生成日志:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;-- /data/clickhouse-19.7.3.9-stable/ClickHouse/utils: Have &lt;span class=&#34;m&#34;&gt;63450&lt;/span&gt; megabytes of memory. Limiting concurrent linkers &lt;span class=&#34;nb&#34;&gt;jobs&lt;/span&gt; to &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; and compiler &lt;span class=&#34;nb&#34;&gt;jobs&lt;/span&gt; to OFF
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;-- /data/clickhouse-19.7.3.9-stable/ClickHouse/dbms: Have &lt;span class=&#34;m&#34;&gt;63450&lt;/span&gt; megabytes of memory. Limiting concurrent linkers &lt;span class=&#34;nb&#34;&gt;jobs&lt;/span&gt; to &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt; and compiler &lt;span class=&#34;nb&#34;&gt;jobs&lt;/span&gt; to &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;-- Will build ClickHouse 19.7.3.1 revision &lt;span class=&#34;m&#34;&gt;54419&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;-- Using &lt;span class=&#34;nv&#34;&gt;internal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;OFF &lt;span class=&#34;nv&#34;&gt;compiler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0: &lt;span class=&#34;nv&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/share/clickhouse/headers/19.7.3.1 :  /usr/local/bin/clickhouse-clang   -pipe -msse4.1 -msse4.2 -mpopcnt  -fno-omit-frame-pointer  -Wall  -Wnon-virtual-dtor  -Wextra -Werror -O2 -g -DNDEBUG -O3  -std&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;c++1z -x c++ -march&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;native -fPIC -fvisibility&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;hidden -fno-implement-inlines -nostdinc -nostdinc++ -Wno-unused-command-line-argument -Bprefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/share/clickhouse -isysroot&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/share/clickhouse/headers/19.7.3.1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; clickhouse-lld
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;-- Target check already exists
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;-- Configuring &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;-- Generating &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;-- Build files have been written to: /data/clickhouse-19.7.3.9-stable/ClickHouse/build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;说明可执行编译的文件已经生成到build目录,在接下来的那一步去执行编译即可&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;编译&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;cd /data/clickhouse-19.7.3.9-stable/ClickHouse/build&lt;/p&gt;
&lt;p&gt;make&lt;/p&gt;
&lt;p&gt;大约在7%的时候会报错:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.blentle.com/images/clickhouse/clickhouse-install-error-01.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt;
&lt;p&gt;查了一下官网的issue,有同样的小伙儿碰到这个问题:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yandex/ClickHouse/issues/5043&#34;&gt;https://github.com/yandex/ClickHouse/issues/5043&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;按推荐的方式试了一下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.blentle.com/images/clickhouse/clickhouse-install-error-solve01.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里我暂时不需要指定编译后的文件的目录，就没有指定编译目录，直接让其生成在build目录&lt;/p&gt;
&lt;p&gt;cd /data/clickhouse-19.7.3.9-stable/ClickHouse/build&lt;/p&gt;
&lt;p&gt;rm -rf *         (这里清理已经生成的文件)&lt;/p&gt;
&lt;p&gt;## 再次执行cmake3带上参数如下, 大约10分钟左右生成编译文件成功&lt;/p&gt;
&lt;p&gt;cmake3 ..  -DGLIBC_COMPATIBILITY=OFF -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo&lt;/p&gt;
&lt;p&gt;成功后，再次编译&lt;/p&gt;
&lt;p&gt;make&lt;/p&gt;
&lt;p&gt;这个过程比较漫长 ，个人从 16:45开始编译，直到 20:35才编译完,成功编译的结果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.blentle.com/images/clickhouse/clickhouse-install-success-end.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt;
&lt;p&gt;最终编译成功的可执行的程序在&lt;/p&gt;
&lt;p&gt;build/dbms/programs下,如  clickhouse-server&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;启动&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;直接 进入build/dbms/programs执行:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;./clickhouse-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.blentle.com/images/clickhouse/clickhouse-start-error.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt;
&lt;p&gt;显然找不到配置文件,我们可以按惯例查看一下help，还好它做了help&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;./clickhouse-server --help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.blentle.com/images/clickhouse/clickhouse-start-01.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt;
&lt;p&gt;嗯，good .这个help做的还不错，很好懂.
这个配置文件上哪儿去找呢.看官方文档: &lt;a href=&#34;https://clickhouse.yandex/docs/en/getting_started/&#34;&gt;https://clickhouse.yandex/docs/en/getting_started/&lt;/a&gt; 官方提供中文版文档，但是还没翻译完,只有一半是中文的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.blentle.com/images/clickhouse/clickhouse-doc.png&#34; alt=&#34;1559185229473&#34;&gt;&lt;/p&gt;
&lt;p&gt;OK ，去我们拉下来的源代码目录 src/dbms/programs/server/config.xml 拷一份放到一个目录，改一下配置，启动,具体的配置慢慢参考官网文档研究..&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
